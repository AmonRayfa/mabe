name: CI/CD

on:
  push:
    branches: [main]
    tags: [v*.*.*]
  pull_request:
    branches: [main]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          # Linux
          - aarch64-unknown-linux-gnu
          - arm-unknown-linux-gnueabi
          - arm-unknown-linux-gnueabihf
          - armv7-unknown-linux-gnueabi
          - armv7-unknown-linux-gnueabihf
          - i586-unknown-linux-gnu
          - i686-unknown-linux-gnu
          - x86_64-unknown-linux-gnu

          # macOS
          - aarch64-apple-darwin
          - x86_64-apple-darwin

          # Windows
          - aarch64-pc-windows-msvc
          - i586-pc-windows-msvc
          - i686-pc-windows-gnu
          - i686-pc-windows-msvc
          - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc

          # Android
          - aarch64-linux-android
          - arm-linux-androideabi
          - armv7-linux-androideabi
          - i686-linux-android
          - x86_64-linux-android

          # iOS
          - aarch64-apple-ios
          - aarch64-apple-ios-sim
          - x86_64-apple-ios

          # WebAssembly
          - wasm32-unknown-emscripten
          - wasm32-unknown-unknown
          - wasm32-wasi
          - wasm32-wasip1
          - wasm32-wasip1-threads
          - wasm32-wasip2

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Cross build for ${{ matrix.target }}
        run: cross build --target ${{ matrix.target }} --all-features --verbose

      - name: Cross build for ${{ matrix.target }}
        run: cross build --target ${{ matrix.target }} --release --all-features --verbose

      - name: Cross test for ${{ matrix.target }}
        run: cross test --target ${{ matrix.target }} --all-features --verbose

  cd:
    permissions:
      contents: write

    needs: [ci]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Create the release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_VERSION="${GITHUB_REF#refs/tags/}"
          RELEASE_TITLE="$(basename "$GITHUB_REPOSITORY") $RELEASE_VERSION"
          RELEASE_NOTES=$(awk '/^## /{i++}i==2{print; while(getline && !/^## /) print; exit}' CHANGELOG.md | tail -n +2)
          gh release create "$RELEASE_VERSION" --title "$RELEASE_TITLE" --notes "$RELEASE_NOTES"
